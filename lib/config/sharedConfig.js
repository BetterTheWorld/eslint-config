module.exports = {
  parser: "@typescript-eslint/parser",
  // parserOptions: {
  //   project: "projects/*/tsconfig.json",
  // },
  reportUnusedDisableDirectives: true,
  ignorePatterns: [
    "node_modules",
    "**/.next",
    "**/babel.config.js",
    "plopfile.js",
    "apollo.config.js",
    "**/next.config.js",
    "next.config.base.js",
    "**/.eslintrc.js",
    ".eslintrc.js",
    "types/**/*",
  ],
  plugins: [
    "promise",
    "react",
    "react-hooks",
    "graphql",
    "import",
    "workspaces",
    "@typescript-eslint",
    "typescript-sort-keys",
    "turbo",
    "deprecate",
  ],
  extends: [
    "airbnb",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:promise/recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier",
    "plugin:workspaces/recommended",
  ],
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  settings: {
    react: {
      version: "detect",
    },
    "import/core-modules": ["react"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"],
    },
    "import/extensions": [".js", ".ts", ".tsx"],
  },
  rules: {
    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "no-undef": "off",
    "no-magic-numbers": "off",
    "no-return-await": "off",
    "no-shadow": "off",
    camelcase: "off",
    "global-require": "off",
    "no-underscore-dangle": "off",
    "max-classes-per-file": "off",
    "arrow-body-style": "off",
    "no-param-reassign": "off",
    "no-use-before-define": "off",
    "prefer-const": "error",
    "no-void": [
      "error",
      {
        allowAsStatement: true,
      },
    ],
    eqeqeq: "error",
    "no-console": "error",
    "no-else-return": "error",
    "no-unexpected-multiline": "error",
    "object-shorthand": ["error", "always"],
    "eol-last": ["error", "always"],
    "comma-dangle": ["error", "only-multiline"],
    "no-restricted-syntax": [
      "error",
      {
        selector: "SequenceExpression",
        message:
          "The comma operator is confusing and a common mistake. Donâ€™t use it!",
      },
    ],
    "max-len": [
      "error",
      {
        code: 110,
        ignoreUrls: true,
        ignoreComments: true,
        ignoreTrailingComments: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
      },
    ],
    "promise/always-return": "off",
    "promise/catch-or-return": [
      "error",
      {
        allowFinally: true,
      },
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/array-type": [
      "error",
      {
        default: "array",
      },
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      {
        ignoreVoid: true,
      },
    ],
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-misused-promises": 0,
    "default-param-last": 0,
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        selector: "function",
        format: ["camelCase", "StrictPascalCase"],
      },
      {
        selector: "variable",
        types: ["boolean"],
        format: ["StrictPascalCase", "UPPER_CASE"],
        format: null,
        leadingUnderscore: "allow",
        prefix: [
          "is",
          "should",
          "has",
          "can",
          "did",
          "will",
          "use",
          "with",
          "IS_",
          "SHOULD_",
          "HAS_",
          "CAN_",
          "DID_",
          "WILL_",
        ],
      },
      {
        selector: "variable",
        format: ["camelCase", "PascalCase", "UPPER_CASE"],
        leadingUnderscore: "allow",
      },
      {
        selector: "parameter",
        types: ["boolean"],
        format: ["StrictPascalCase"],
        prefix: ["is", "should", "has", "can", "did", "will", "with", "use"],
        leadingUnderscore: "allow",
      },
      {
        selector: "parameterProperty",
        types: ["boolean"],
        format: ["StrictPascalCase"],
        prefix: ["is", "should", "has", "can", "did", "will", "with"],
        leadingUnderscore: "allow",
      },
      {
        selector: "accessor",
        types: ["boolean"],
        format: ["StrictPascalCase"],
        prefix: ["is", "should", "has", "can", "did", "will", "with"],
        leadingUnderscore: "allow",
      },
      {
        selector: "typeLike",
        format: ["PascalCase"],
        leadingUnderscore: "allow",
      },
      {
        selector: "interface",
        format: ["PascalCase"],
        prefix: ["I"],
      },
      {
        selector: "typeAlias",
        format: ["PascalCase"],
        prefix: ["T"],
      },
      {
        selector: "typeParameter",
        format: ["PascalCase"],
        prefix: ["T"],
      },
    ],
    "jsx-a11y/accessible-emoji": "warn",
    "jsx-a11y/label-has-associated-control": "warn",
    "jsx-a11y/anchor-is-valid": [
      "error",
      {
        components: ["NextLink"],
      },
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/default-props-match-prop-types": "off",
    "react/prop-types": "off",
    "react/jsx-no-bind": "off",
    "react/static-property-placement": "off",
    "react/state-in-constructor": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/display-name": "off",
    "react/jsx-props-no-spreading": "off",
    "react/no-multi-comp": "off",
    "react/require-default-props": "off",
    "react/jsx-sort-default-props": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react/prefer-stateless-function": "error",
    "react/jsx-no-useless-fragment": ["error", { allowExpressions: true }],
    "react/jsx-sort-props": [
      "error",
      {
        callbacksLast: true,
        shorthandFirst: true,
        ignoreCase: true,
      },
    ],
    "react/no-redundant-should-component-update": "error",
    "react/no-access-state-in-setstate": "error",
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unused-state": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-fragments": ["error", "syntax"],
    "react/destructuring-assignment": [
      "error",
      "always",
      {
        ignoreClassFields: true,
      },
    ],
    "graphql/no-deprecated-fields": 0,
    "import/no-extraneous-dependencies": "off",
    "import/prefer-default-export": "off",
    "import/no-absolute-path": "error",
    "import/no-unresolved": "error",
    "import/no-default-export": "error",
    "import/no-cycle": "warn",
    "import/no-deprecated": "warn",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/extensions": [
      "warn",
      "ignorePackages",
      {
        tsx: "never",
        ts: "never",
        js: "never",
      },
    ],
    "import/order": [
      "error",
      {
        alphabetize: {
          order: "asc",
        },
        groups: [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
        ],
        "newlines-between": "never",
      },
    ],
    "typescript-sort-keys/interface": [
      "warn",
      "asc",
      {
        caseSensitive: false,
        natural: false,
        requiredFirst: true,
      },
    ],
    "typescript-sort-keys/string-enum": "warn",
    "turbo/no-undeclared-env-vars": ["error"],
    "@next/next/no-img-element": 0,
    "@next/next/no-html-link-for-pages": "off",
    "react/function-component-definition": 0,
    "no-promise-executor-return": 0,
    "@typescript-eslint/no-unsafe-enum-comparison": 0,
    "react/no-unstable-nested-components": ["warn"],
    "react/jsx-no-constructed-context-values": ["warn"],
    "@typescript-eslint/prefer-optional-chain": ["warn"],
    "prefer-regex-literals": ["warn"],
    "import/no-import-module-exports": ["warn"],
    "jsx-a11y/control-has-associated-label": 0,
  },
};
